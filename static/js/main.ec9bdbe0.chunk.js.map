{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","userUnique","length","PostList","posts","combinedPostsUsersCommArr","postsFromServer","userId","usersFromServer","filter","idFromPosts","commentsFromServer","comm","postId","App","ReactDOM","render","document","getElementById"],"mappings":"608IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCPMI,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBL,EAAsBK,EAAtBL,KAAMC,EAAgBI,EAAhBJ,MAAOK,EAASD,EAATC,KAErB,OAEE,sBAAKJ,UAAU,cAAf,UAEE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SCjBIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQK,UCHnBC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOP,EAAyBM,EAAzBN,KAAMP,EAAmBa,EAAnBb,KAAMS,EAAaI,EAAbJ,SACpBM,EAAP,YAAqBf,EAArB,MAEA,OACE,sBAAKG,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,eAED,cAAC,EAAD,CAAUd,KAAMe,UAIpB,mBAAGZ,UAAU,iBAAb,SACGI,IAGFE,EAASO,OAAS,EACjB,cAAC,EAAD,CAAaP,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCC7BGQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMR,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKF,U,qBCWnB,IAAMQ,EAA4BC,EAAgBV,KAAI,SAAAG,GAAI,kCAC5DA,GAD4D,IAE/Db,MAP6BqB,EAODR,EAAKQ,OAN1BC,EAAgBC,QAAO,SAAAvB,GAAI,OAAIA,EAAKW,KAAOU,MAC7C,MAMLZ,UAbgCe,EAaGX,EAAKF,GAZjCc,EAAmBF,QAAO,SAAAG,GAAI,OAAIA,EAAKC,SAAWH,MACpD,QAFP,IAAkCA,EAKHH,KAWlBO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUe,MAAOC,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec9bdbe0.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n\n    <div className=\"CommentInfo\">\n\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n\n  );\n};\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo key={comment.id} comment={comment} />\n    ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n  const [userUnique] = user;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={userUnique} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length > 0 ? (\n        <CommentList comments={comments} />\n      ) : (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n\n    </div>\n  );\n};\n","\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getCommentsByIdFromPosts(idFromPosts) {\n  return commentsFromServer.filter(comm => comm.postId === idFromPosts)\n    || null;\n}\n\nfunction getUsersByIdFromPosts(userId) {\n  return usersFromServer.filter(user => user.id === userId)\n    || null;\n}\n\nexport const combinedPostsUsersCommArr = postsFromServer.map(post => ({\n  ...post,\n  user: getUsersByIdFromPosts(post.userId),\n  comments: getCommentsByIdFromPosts(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={combinedPostsUsersCommArr} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}